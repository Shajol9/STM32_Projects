
gpio_input_configuration.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002a8  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800043c  0800043c  00002014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800043c  0800043c  00002014  2**0
                  CONTENTS
  4 .ARM          00000000  0800043c  0800043c  00002014  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800043c  0800043c  00002014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800043c  0800043c  0000143c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000440  08000440  00001440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000014  20000000  08000444  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002014  2**0
                  CONTENTS
 10 .bss          0000001c  20000014  20000014  00002014  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000030  20000030  00002014  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00002014  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000202  00000000  00000000  00002044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000010c  00000000  00000000  00002246  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000060  00000000  00000000  00002358  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000003f  00000000  00000000  000023b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001bcd  00000000  00000000  000023f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000742  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000777d  00000000  00000000  00004706  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000be83  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000cc  00000000  00000000  0000bec8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000082  00000000  00000000  0000bf94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000014 	.word	0x20000014
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000424 	.word	0x08000424

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000018 	.word	0x20000018
 80001d0:	08000424 	.word	0x08000424

080001d4 <main>:
void delay2(void);
void gpio_initialization (void);


int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
	gpio_initialization();
 80001da:	f000 f89d 	bl	8000318 <gpio_initialization>
	while(1){

		// reading from the PA0 as input
		uint8_t pinState = (uint8_t) (*p_gpioAPinInputReg & 0x1);
 80001de:	4b36      	ldr	r3, [pc, #216]	@ (80002b8 <main+0xe4>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	b2db      	uxtb	r3, r3
 80001e6:	f003 0301 	and.w	r3, r3, #1
 80001ea:	717b      	strb	r3, [r7, #5]
		if (pinState){
 80001ec:	797b      	ldrb	r3, [r7, #5]
 80001ee:	2b00      	cmp	r3, #0
 80001f0:	d058      	beq.n	80002a4 <main+0xd0>
			// configuring PE as output for blink all user LEDs with a delay
			*p_gpioEPinOutReg &= 0x0000;
 80001f2:	4b32      	ldr	r3, [pc, #200]	@ (80002bc <main+0xe8>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4b30      	ldr	r3, [pc, #192]	@ (80002bc <main+0xe8>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	2200      	movs	r2, #0
 80001fe:	601a      	str	r2, [r3, #0]
			delay2();
 8000200:	f000 f874 	bl	80002ec <delay2>
			for (uint8_t i=9; i<16; i++){
 8000204:	2309      	movs	r3, #9
 8000206:	71fb      	strb	r3, [r7, #7]
 8000208:	e019      	b.n	800023e <main+0x6a>
				*p_gpioEPinOutReg |= (1<<i);//0x0200
 800020a:	4b2c      	ldr	r3, [pc, #176]	@ (80002bc <main+0xe8>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	681a      	ldr	r2, [r3, #0]
 8000210:	79fb      	ldrb	r3, [r7, #7]
 8000212:	2101      	movs	r1, #1
 8000214:	fa01 f303 	lsl.w	r3, r1, r3
 8000218:	4619      	mov	r1, r3
 800021a:	4b28      	ldr	r3, [pc, #160]	@ (80002bc <main+0xe8>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	430a      	orrs	r2, r1
 8000220:	601a      	str	r2, [r3, #0]
				delay1();
 8000222:	f000 f84d 	bl	80002c0 <delay1>
				*p_gpioEPinOutReg &= 0x0000;
 8000226:	4b25      	ldr	r3, [pc, #148]	@ (80002bc <main+0xe8>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4b23      	ldr	r3, [pc, #140]	@ (80002bc <main+0xe8>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	2200      	movs	r2, #0
 8000232:	601a      	str	r2, [r3, #0]
				delay1();
 8000234:	f000 f844 	bl	80002c0 <delay1>
			for (uint8_t i=9; i<16; i++){
 8000238:	79fb      	ldrb	r3, [r7, #7]
 800023a:	3301      	adds	r3, #1
 800023c:	71fb      	strb	r3, [r7, #7]
 800023e:	79fb      	ldrb	r3, [r7, #7]
 8000240:	2b0f      	cmp	r3, #15
 8000242:	d9e2      	bls.n	800020a <main+0x36>
			}
			*p_gpioEPinOutReg |= 0x0100;
 8000244:	4b1d      	ldr	r3, [pc, #116]	@ (80002bc <main+0xe8>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	4b1c      	ldr	r3, [pc, #112]	@ (80002bc <main+0xe8>)
 800024c:	681b      	ldr	r3, [r3, #0]
 800024e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000252:	601a      	str	r2, [r3, #0]
			delay1();
 8000254:	f000 f834 	bl	80002c0 <delay1>
			*p_gpioEPinOutReg &= 0x0000;
 8000258:	4b18      	ldr	r3, [pc, #96]	@ (80002bc <main+0xe8>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4b17      	ldr	r3, [pc, #92]	@ (80002bc <main+0xe8>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	2200      	movs	r2, #0
 8000264:	601a      	str	r2, [r3, #0]
			delay1();
 8000266:	f000 f82b 	bl	80002c0 <delay1>

			for(uint8_t i=0; i<3; i++){
 800026a:	2300      	movs	r3, #0
 800026c:	71bb      	strb	r3, [r7, #6]
 800026e:	e015      	b.n	800029c <main+0xc8>
				*p_gpioEPinOutReg |= 0xff00;
 8000270:	4b12      	ldr	r3, [pc, #72]	@ (80002bc <main+0xe8>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b11      	ldr	r3, [pc, #68]	@ (80002bc <main+0xe8>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f442 427f 	orr.w	r2, r2, #65280	@ 0xff00
 800027e:	601a      	str	r2, [r3, #0]
				delay2();
 8000280:	f000 f834 	bl	80002ec <delay2>
				*p_gpioEPinOutReg &= 0x0000;
 8000284:	4b0d      	ldr	r3, [pc, #52]	@ (80002bc <main+0xe8>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	4b0c      	ldr	r3, [pc, #48]	@ (80002bc <main+0xe8>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	2200      	movs	r2, #0
 8000290:	601a      	str	r2, [r3, #0]
				delay2();
 8000292:	f000 f82b 	bl	80002ec <delay2>
			for(uint8_t i=0; i<3; i++){
 8000296:	79bb      	ldrb	r3, [r7, #6]
 8000298:	3301      	adds	r3, #1
 800029a:	71bb      	strb	r3, [r7, #6]
 800029c:	79bb      	ldrb	r3, [r7, #6]
 800029e:	2b02      	cmp	r3, #2
 80002a0:	d9e6      	bls.n	8000270 <main+0x9c>
 80002a2:	e79c      	b.n	80001de <main+0xa>
			}

		}else{
			*p_gpioEPinOutReg |= 0xff00;
 80002a4:	4b05      	ldr	r3, [pc, #20]	@ (80002bc <main+0xe8>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	4b04      	ldr	r3, [pc, #16]	@ (80002bc <main+0xe8>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f442 427f 	orr.w	r2, r2, #65280	@ 0xff00
 80002b2:	601a      	str	r2, [r3, #0]
	while(1){
 80002b4:	e793      	b.n	80001de <main+0xa>
 80002b6:	bf00      	nop
 80002b8:	20000010 	.word	0x20000010
 80002bc:	20000008 	.word	0x20000008

080002c0 <delay1>:
		}
	}

}

void delay1(void){
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
	for (int i=0; i<500000; i++);
 80002c6:	2300      	movs	r3, #0
 80002c8:	607b      	str	r3, [r7, #4]
 80002ca:	e002      	b.n	80002d2 <delay1+0x12>
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	3301      	adds	r3, #1
 80002d0:	607b      	str	r3, [r7, #4]
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a04      	ldr	r2, [pc, #16]	@ (80002e8 <delay1+0x28>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	ddf8      	ble.n	80002cc <delay1+0xc>
}
 80002da:	bf00      	nop
 80002dc:	bf00      	nop
 80002de:	370c      	adds	r7, #12
 80002e0:	46bd      	mov	sp, r7
 80002e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e6:	4770      	bx	lr
 80002e8:	0007a11f 	.word	0x0007a11f

080002ec <delay2>:

void delay2(void){
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
	for (int i=0; i<100000; i++);
 80002f2:	2300      	movs	r3, #0
 80002f4:	607b      	str	r3, [r7, #4]
 80002f6:	e002      	b.n	80002fe <delay2+0x12>
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	3301      	adds	r3, #1
 80002fc:	607b      	str	r3, [r7, #4]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a04      	ldr	r2, [pc, #16]	@ (8000314 <delay2+0x28>)
 8000302:	4293      	cmp	r3, r2
 8000304:	ddf8      	ble.n	80002f8 <delay2+0xc>
}
 8000306:	bf00      	nop
 8000308:	bf00      	nop
 800030a:	370c      	adds	r7, #12
 800030c:	46bd      	mov	sp, r7
 800030e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000312:	4770      	bx	lr
 8000314:	0001869f 	.word	0x0001869f

08000318 <gpio_initialization>:

void gpio_initialization (void){
 8000318:	b480      	push	{r7}
 800031a:	af00      	add	r7, sp, #0
	// performing bitwise or operation to enable the
	// GPIO RCC clock for specific gpio.
	*p_ClkCtrlReg |= (1<<21); //mask value = 0x00200000
 800031c:	4b17      	ldr	r3, [pc, #92]	@ (800037c <gpio_initialization+0x64>)
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	681a      	ldr	r2, [r3, #0]
 8000322:	4b16      	ldr	r3, [pc, #88]	@ (800037c <gpio_initialization+0x64>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 800032a:	601a      	str	r2, [r3, #0]
	*p_ClkCtrlReg |= (1<<17);
 800032c:	4b13      	ldr	r3, [pc, #76]	@ (800037c <gpio_initialization+0x64>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	681a      	ldr	r2, [r3, #0]
 8000332:	4b12      	ldr	r3, [pc, #72]	@ (800037c <gpio_initialization+0x64>)
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 800033a:	601a      	str	r2, [r3, #0]

	// Set GPIO mode register as output
	// clear the 19th and 18th bit and then set them to 01,
	*p_gpioEModeReg &= ~(3<<24); // 0xfff3ffff;
 800033c:	4b10      	ldr	r3, [pc, #64]	@ (8000380 <gpio_initialization+0x68>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	4b0f      	ldr	r3, [pc, #60]	@ (8000380 <gpio_initialization+0x68>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800034a:	601a      	str	r2, [r3, #0]
	*p_gpioEModeReg |= 0x55550000;// (1<<18);
 800034c:	4b0c      	ldr	r3, [pc, #48]	@ (8000380 <gpio_initialization+0x68>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	4a0b      	ldr	r2, [pc, #44]	@ (8000380 <gpio_initialization+0x68>)
 8000354:	6812      	ldr	r2, [r2, #0]
 8000356:	f043 43aa 	orr.w	r3, r3, #1426063360	@ 0x55000000
 800035a:	f443 03aa 	orr.w	r3, r3, #5570560	@ 0x550000
 800035e:	6013      	str	r3, [r2, #0]

	// clear all 0th a 1st bit and keep it as it is
	// as 00 is configuration for input
	*p_gpioAModeReg &= ~(3<<0); // 0xfffffff3
 8000360:	4b08      	ldr	r3, [pc, #32]	@ (8000384 <gpio_initialization+0x6c>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	681a      	ldr	r2, [r3, #0]
 8000366:	4b07      	ldr	r3, [pc, #28]	@ (8000384 <gpio_initialization+0x6c>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	f022 0203 	bic.w	r2, r2, #3
 800036e:	601a      	str	r2, [r3, #0]
}
 8000370:	bf00      	nop
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr
 800037a:	bf00      	nop
 800037c:	20000000 	.word	0x20000000
 8000380:	20000004 	.word	0x20000004
 8000384:	2000000c 	.word	0x2000000c

08000388 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000388:	480d      	ldr	r0, [pc, #52]	@ (80003c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800038a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800038c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000390:	480c      	ldr	r0, [pc, #48]	@ (80003c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000392:	490d      	ldr	r1, [pc, #52]	@ (80003c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000394:	4a0d      	ldr	r2, [pc, #52]	@ (80003cc <LoopForever+0xe>)
  movs r3, #0
 8000396:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000398:	e002      	b.n	80003a0 <LoopCopyDataInit>

0800039a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800039a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800039c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800039e:	3304      	adds	r3, #4

080003a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003a4:	d3f9      	bcc.n	800039a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003a6:	4a0a      	ldr	r2, [pc, #40]	@ (80003d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a8:	4c0a      	ldr	r4, [pc, #40]	@ (80003d4 <LoopForever+0x16>)
  movs r3, #0
 80003aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003ac:	e001      	b.n	80003b2 <LoopFillZerobss>

080003ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003b0:	3204      	adds	r2, #4

080003b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003b4:	d3fb      	bcc.n	80003ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003b6:	f000 f811 	bl	80003dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ba:	f7ff ff0b 	bl	80001d4 <main>

080003be <LoopForever>:

LoopForever:
  b LoopForever
 80003be:	e7fe      	b.n	80003be <LoopForever>
  ldr   r0, =_estack
 80003c0:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 80003c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c8:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 80003cc:	08000444 	.word	0x08000444
  ldr r2, =_sbss
 80003d0:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 80003d4:	20000030 	.word	0x20000030

080003d8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d8:	e7fe      	b.n	80003d8 <ADC1_2_IRQHandler>
	...

080003dc <__libc_init_array>:
 80003dc:	b570      	push	{r4, r5, r6, lr}
 80003de:	4d0d      	ldr	r5, [pc, #52]	@ (8000414 <__libc_init_array+0x38>)
 80003e0:	4c0d      	ldr	r4, [pc, #52]	@ (8000418 <__libc_init_array+0x3c>)
 80003e2:	1b64      	subs	r4, r4, r5
 80003e4:	10a4      	asrs	r4, r4, #2
 80003e6:	2600      	movs	r6, #0
 80003e8:	42a6      	cmp	r6, r4
 80003ea:	d109      	bne.n	8000400 <__libc_init_array+0x24>
 80003ec:	4d0b      	ldr	r5, [pc, #44]	@ (800041c <__libc_init_array+0x40>)
 80003ee:	4c0c      	ldr	r4, [pc, #48]	@ (8000420 <__libc_init_array+0x44>)
 80003f0:	f000 f818 	bl	8000424 <_init>
 80003f4:	1b64      	subs	r4, r4, r5
 80003f6:	10a4      	asrs	r4, r4, #2
 80003f8:	2600      	movs	r6, #0
 80003fa:	42a6      	cmp	r6, r4
 80003fc:	d105      	bne.n	800040a <__libc_init_array+0x2e>
 80003fe:	bd70      	pop	{r4, r5, r6, pc}
 8000400:	f855 3b04 	ldr.w	r3, [r5], #4
 8000404:	4798      	blx	r3
 8000406:	3601      	adds	r6, #1
 8000408:	e7ee      	b.n	80003e8 <__libc_init_array+0xc>
 800040a:	f855 3b04 	ldr.w	r3, [r5], #4
 800040e:	4798      	blx	r3
 8000410:	3601      	adds	r6, #1
 8000412:	e7f2      	b.n	80003fa <__libc_init_array+0x1e>
 8000414:	0800043c 	.word	0x0800043c
 8000418:	0800043c 	.word	0x0800043c
 800041c:	0800043c 	.word	0x0800043c
 8000420:	08000440 	.word	0x08000440

08000424 <_init>:
 8000424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000426:	bf00      	nop
 8000428:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800042a:	bc08      	pop	{r3}
 800042c:	469e      	mov	lr, r3
 800042e:	4770      	bx	lr

08000430 <_fini>:
 8000430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000432:	bf00      	nop
 8000434:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000436:	bc08      	pop	{r3}
 8000438:	469e      	mov	lr, r3
 800043a:	4770      	bx	lr
